version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: hr
      POSTGRES_USER: hr
      POSTGRES_PASSWORD: hr
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hr"]
      interval: 10s
      timeout: 5s
      retries: 5

  input-service:
    build:
      context: ./InputService
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/hr
      SPRING_DATASOURCE_USERNAME: hr
      SPRING_DATASOURCE_PASSWORD: hr
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  api-service:
    build:
      context: ./ApiService
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/hr
      SPRING_DATASOURCE_USERNAME: hr
      SPRING_DATASOURCE_PASSWORD: hr
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db-data:
